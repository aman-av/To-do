// proto/todo.proto
syntax = "proto3";

package todo;

option go_package = "./proto;todo";

service TodoService {

  // This is a unary RPC
  rpc CreateTask(CreateTaskRequest) returns (Task);
  rpc GetTask(GetTaskRequest) returns (Task);
  rpc UpdateTask(UpdateTaskRequest) returns (Task);
  rpc DeleteTask(DeleteTaskRequest) returns (Empty);

  // This is a server streaming RPC
  rpc ListTasks(Empty) returns (stream Task);

  // This is a client streaming RPC
  rpc CreateTasks(stream CreateTaskRequest) returns (CreateTasksResponse);

  // This is a bidirectional streaming RPC
  rpc TaskChat(stream GetTaskRequest) returns (stream Task);
}
message CreateTasksResponse {
  int32 created_count = 1;
}

message Task {
  string id = 1;
  string title = 2;
  string description = 3;
}

message CreateTaskRequest {
  string title = 1;
  string description = 2;
}

message GetTaskRequest {
  string id = 1;
}

message UpdateTaskRequest {
  string id = 1;
  string title = 2;
  string description = 3;
}

message DeleteTaskRequest {
  string id = 1;
}

message TaskList {
  repeated Task tasks = 1;
}

message Empty {}
